<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
namespace 要写当前 xml 要给哪个接口提供 sql 语句,写哪个接口的全限定名称
一个 xml 文件只给一个接口文件提供 sql
-->
<mapper namespace="com.qianfeng.smartdevices.mapper.DevicesMapper">
    <insert id="addDevice">
        insert into devices (devicesuuid,devicename,categoryid,address,areaid,direction,num,status)
        values (#{devicesuuid},#{devicename},#{categoryid},#{address},#{areaid},#{direction},#{num},#{status})

    </insert>
    <update id="updateDevice">
        update devices
        <set>
            <if test="devicesuuid !=null and devicesuuid!=''">
                devicesuuid=#{devicesuuid},
            </if>
            <if test="devicename !=null and devicename!=''">
                devicename=#{devicename},
            </if>
            <if test="categoryid !=null and categoryid!=-100">
                categoryid=#{categoryid},
            </if>
            <if test="address !=null and address!=''">
                address=#{address},
            </if>
            <if test="areaid !=null and areaid!=-100">
                areaid=#{areaid},
            </if>
            <if test="direction !=null and direction!=''">
                direction=#{direction},
            </if>
            <if test="num !=null and num!=-100">
                num=#{num},
            </if>
            <if test="status !=null and status!=''">
                status=#{status},
            </if>
        </set>
            where id=#{id}
    </update>
    <!--
    当前是给接口中哪个方法提供 sql 语句的  id 就是方法的名字

    parameterType 参数类型, 接口中参数是什么类型这里就写什么类型
    resultType 接口的方法返回什么,这里就写什么, 如果是一个类,就写全限定名称
    #{} 占位符, 有防止 sql 注入的功能, 里面写的东西是参数的名字, 如果只有一个参数,并且参数是是基本数据类型或者是 String,则可以随便写,但是建议见其明知其义
    -->

    <!-- String address,String status,Long categoryid,Long areaid -->
    <select id="findAllDevices" resultType="com.qianfeng.smartdevices.pojo.Devices">
        select * from devices
        <where>
            <if test="address != null and address!=''">
                address like concat('%',#{address},'%')
            </if>
            <if test="status != null and status!=''">
               and status=#{status}
            </if>
            <if test="categoryid != null and categoryid!= -100">
                and categoryid=#{categoryid}
            </if>
            <if test="areaid != null and areaid != -100">
                and areaid=#{areaid}
            </if>

        </where>
    </select>

    <delete id="deleteDevice">
        update devices set status =2
        where id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>

    </delete>

</mapper>